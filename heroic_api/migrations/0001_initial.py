# Generated by Django 5.1.5 on 2025-01-23 22:56

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Instrument name', max_length=100)),
                ('available', models.BooleanField(default=True, help_text='Whether this Instrument is available or not')),
            ],
        ),
        migrations.CreateModel(
            name='Observatory',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Observatory Name', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentCapability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('UNAVAILABLE', 'Unavailable'), ('SCHEDULABLE', 'Schedulable')], default='AVAILABLE', help_text='Instrument availability status', max_length=20)),
                ('optical_element_groups', models.JSONField(blank=True, default=dict, help_text='Dictionary of Optical elements available for instrument')),
                ('operation_modes', models.JSONField(blank=True, default=dict, help_text='Dictionary of Operation modes available for instrument')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capabilities', to='heroic_api.instrument')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Site Name', max_length=100)),
                ('timezone', models.CharField(default='UTC', help_text='Timezone Name', max_length=64)),
                ('elevation', models.FloatField(help_text='Site elevation in meters', validators=[django.core.validators.MinValueValidator(-500.0), django.core.validators.MaxValueValidator(100000.0)])),
                ('observatory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='heroic_api.observatory')),
            ],
        ),
        migrations.CreateModel(
            name='Telescope',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Telescope Name', max_length=100)),
                ('aperture', models.FloatField(default=0.0, help_text='The aperture of this telescope in meters', validators=[django.core.validators.MinValueValidator(0)])),
                ('latitude', models.FloatField(default=0.0, help_text='Telescope latitude in decimal degrees', validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('longitude', models.FloatField(default=0.0, help_text='Telescope longitude in decimal degrees', validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('horizon', models.FloatField(default=0.0, help_text='Minimum distance from horizion telescope can point without field of view being obscured, in degrees', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90)])),
                ('positive_ha_limit', models.FloatField(default=0.0, help_text='Positive hour-angle limit in hours', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)])),
                ('negative_ha_limit', models.FloatField(default=0.0, help_text='Negative hour-angle limit in hours', validators=[django.core.validators.MinValueValidator(-12), django.core.validators.MaxValueValidator(0)])),
                ('zenith_blind_spot', models.FloatField(default=0.0, help_text='For AltAz telescopes, radius of zenith blind spot in degrees', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(180)])),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telescopes', to='heroic_api.site')),
            ],
        ),
        migrations.AddField(
            model_name='instrument',
            name='telescope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruments', to='heroic_api.telescope'),
        ),
        migrations.CreateModel(
            name='TelescopeStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('POINTING', 'Pointing'), ('UNAVAILABLE', 'Unavailable'), ('SCHEDULABLE', 'Schedulable')], default='AVAILABLE', help_text='Telescope Status', max_length=20)),
                ('reason', models.TextField(blank=True, help_text='Reason for current telescope status', null=True)),
                ('extra', models.JSONField(blank=True, default=dict, help_text='Extra data related to current telescope status or pointing')),
                ('target', models.CharField(blank=True, help_text='Target name for current pointing', max_length=100, null=True)),
                ('ra', models.FloatField(blank=True, help_text='Target Right Ascension for current pointing in decimal degrees', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(360.0)])),
                ('dec', models.FloatField(blank=True, help_text='Target Declination for current pointing in decimal degrees', null=True, validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('instrument', models.ForeignKey(blank=True, help_text='Instrument reference for current pointing', null=True, on_delete=django.db.models.deletion.SET_NULL, to='heroic_api.instrument')),
                ('telescope', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='heroic_api.telescope')),
            ],
        ),
    ]
